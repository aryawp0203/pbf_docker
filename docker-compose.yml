version: "3.8"

services:
  mysql:
    image: mysql:8.0
    container_name: mysql_host
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - ./mysql_data:/var/lib/mysql
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-u", "root", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 3

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin_cpanel
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "9001:80"
    depends_on:
      - mysql
    networks:
      - app_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile-php
    image: pbf/backend-php:1.0
    container_name: backend_php83
    restart: always
    working_dir: /var/www
    volumes:
      - ./backend/src:/var/www
    expose:
      - "9000"
    command: ["php-fpm", "-F"]
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app_network

  backend_nginx:
    build:
      context: ./backend
      dockerfile: Dockerfile-nginx
    image: pbf/backend-nginx:1.0
    container_name: backend_nginx
    restart: always
    ports:
      - "8080:80"
    depends_on:
      - backend
    volumes:
      - ./backend/src:/var/www
      - ./backend/nginx:/etc/nginx/conf.d/
    command: ["nginx", "-g", "daemon off;"]
    networks:
      - app_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile-php
    image: pbf/frontend-php:1.0
    container_name: frontend_php81
    restart: always
    working_dir: /var/www
    volumes:
      - ./frontend/src:/var/www
    expose:
      - "9000"
    depends_on:
      - backend
    networks:
      - app_network

  frontend_nginx:
    build:
      context: ./frontend
      dockerfile: Dockerfile-nginx
    image: pbf/frontend-nginx:1.0
    container_name: frontend_nginx
    restart: always
    ports:
      - "3000:80"
    depends_on:
      - frontend
    volumes:
      - ./frontend/src:/var/www
      - ./frontend/nginx:/etc/nginx/conf.d/
    command: ["nginx", "-g", "daemon off;"]
    networks:
      - app_network

volumes:
  mysql_data:

networks:
  app_network:
    driver: bridge
